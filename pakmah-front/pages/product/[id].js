import { fetchProduct, createQueue } from "../../services";
import Image from "next/image";
import { useRouter } from "next/router";
import { useEffect } from "react";
import { useState } from "react";
import { useForm } from "react-hook-form";
import { sendwebhook } from "../../services/webhook";

export default function Product() {
  const [product, setProduct] = useState(null);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();
  const router = useRouter();
  const id = router.query.id;

  useEffect(() => {
    if (id) fetchProduct(id).then((product) => setProduct(product));
  }, [id]);

  const onSubmit = async (d, e) => {
    e.target.reset();
    createQueue({ ...d, product_id: id });
    sendwebhook(
      `‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏≠‡∏î‡∏µ ${product?.name} ‡∏£‡∏≤‡∏Ñ‡∏≤ ${product?.price} ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏Ç‡πâ‡∏≤`
    );
  };

  return (
    <div className="container mt-5 mx-auto px-5 max-w-5xl">
      <div className="rounded-xl p-4">
        {product ? (
          <div className="grid grid-cols-1 md:grid-cols-3">
            <div className="col-span-2 md:mb-0 md:mr-4 mb-4">
              <Image
                src={product.image}
                layout="responsive"
                width="700"
                height="200"
                objectFit="cover"
                className="rounded-2xl"
                alt="product image"
              />
              <div className="flex justify-start items-start py-2 font-semibold text-gray-800">
                {product.price} ‡∏ö‡∏≤‡∏ó
              </div>
              <article>
                <b>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î : </b>
                <p>
                  {product.description},
                  <br />
                  üì£ Term of Use ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ üì£
                  <p>
                    1. ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏î‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ 10‡∏ô‡∏≤‡∏ó‡∏µ
                    ‡∏ñ‡∏∂‡∏á 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏à‡∏∂‡∏á‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                  </p>
                  <p>2. ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÅ‡∏ö‡∏ö ID+PASS ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
                  <p>3. ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</p>
                  <p>
                    4. ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡πâ 24 ‡∏ä‡∏° ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
                    ‡∏´‡∏≤‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏î‡∏ô‡πÅ‡∏ö‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÄ‡∏û‡∏£‡∏≤‡∏∞
                    ‡∏´‡∏≤‡∏Å‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Å‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡∏ô‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏à‡∏≤‡∏Å Roblox
                    ‡πÇ‡∏õ‡∏£‡∏î‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡∏´‡∏≤‡∏Å ID ‡πÇ‡∏î‡∏ô‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏î‡∏ô‡πÅ‡∏ö‡∏ô
                  </p>
                  <p>
                    5. ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ROBUX ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô &quot;‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô&quot;
                    Roblox ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏≠‡∏á
                    ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
                  </p>
                </p>
                <b>‡∏£‡∏≤‡∏Ñ‡∏≤ : </b>
                <p>{product.price} ‡∏ö‡∏≤‡∏ó</p>
              </article>
            </div>
            <form
              onSubmit={handleSubmit(onSubmit)}
              className="border rounded-lg p-4 max-h-60"
            >
              <p className="text-center">‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÄ‡∏Å‡∏°‡∏™‡πå</p>
              <input
                type="text"
                placeholder="‡∏ä‡∏∑‡πà‡∏≠"
                className="px-5 py-3 mt-4 w-full rounded-md bg-gray-100 text-sm outline-none"
                {...register("name", {
                  required: {
                    value: true,
                    message: "‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏¢‡∏π‡∏™‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÄ‡∏ô‡∏°",
                  },
                })}
              />
              <a className="ml-1 mt-1 font-medium text-xs text-blue-500">
                {errors.name && errors.name.message}
              </a>
              <input
                type="password"
                placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
                className="px-5 py-3 mt-4 w-full rounded-md bg-gray-100 text-sm outline-none"
                name="password"
                {...register("password", {
                  required: {
                    value: true,
                    message: "‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô",
                  },
                })}
              />
              <a className="ml-1 mt-1 font-medium text-xs text-blue-500">
                {errors.password && errors.password.message}
              </a>
              <button
                type="submit"
                className="py-2 mt-4 w-full rounded-md bg-blue-500 text-white outline-none font-medium"
              >
                ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
              </button>
            </form>
          </div>
        ) : (
          <p className="text-center">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ä‡∏¥‡πâ‡∏ô‡∏ô‡∏µ‡πâ</p>
        )}
      </div>
    </div>
  );
}
